"""empty message

Revision ID: ef7d6f22e0a2
Revises: 
Create Date: 2022-08-13 21:44:38.815723

"""
from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision = 'ef7d6f22e0a2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresstypes',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('type_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=15), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('last_update_time', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('bookingcategory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookingcategory_name'), 'bookingcategory', ['name'], unique=True)
    op.create_table('city',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('lga', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=80), nullable=True),
    sa.Column('country', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_category',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_default'), 'role', ['default'], unique=False)
    op.create_table('socket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sid', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sid')
    )
    op.create_table('landmark',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('landmark_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('geo_cat', Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ),
    sa.PrimaryKeyConstraint('landmark_id')
    )
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('telephone', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('is_artisan', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('sign_up_date', sa.Date(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('address',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('address_id', sa.String(), nullable=False),
    sa.Column('address_line_1', sa.String(length=50), nullable=False),
    sa.Column('address_line_2', sa.String(length=50), nullable=True),
    sa.Column('state_or_province', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=6), nullable=True),
    sa.Column('last_update_time', sa.Date(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('address_type_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['address_type_id'], ['addresstypes.type_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('artisan',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('artisan_id', sa.String(length=200), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('job_title', sa.String(length=100), nullable=True),
    sa.Column('job_description', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('sign_up_date', sa.Date(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('job_category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['job_category_id'], ['bookingcategory.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('artisan_id')
    )
    op.create_table('payment',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('payment_id', sa.String(), nullable=False),
    sa.Column('customer_id', sa.String(), nullable=True),
    sa.Column('method', sa.String(length=50), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('base_rate', sa.Float(), nullable=True),
    sa.Column('surge_rate', sa.Float(), nullable=True),
    sa.Column('tax', sa.Float(), nullable=True),
    sa.Column('tip_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('booking',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('booking_id', sa.String(), nullable=False),
    sa.Column('customer_id', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('artisan_id', sa.String(), nullable=True),
    sa.Column('start_time', sa.Date(), nullable=True),
    sa.Column('end_time', sa.Date(), nullable=True),
    sa.Column('location', Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.String(), nullable=True),
    sa.Column('artisan_rating', sa.Integer(), nullable=True),
    sa.Column('customer_rating', sa.Integer(), nullable=True),
    sa.Column('date_of_booking', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['artisan_id'], ['artisan.artisan_id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['bookingcategory.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.payment_id'], ),
    sa.PrimaryKeyConstraint('booking_id'),
    sa.UniqueConstraint('booking_id')
    )
    op.create_table('document',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('doc_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('doc_type', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('country', sa.String(length=60), nullable=True),
    sa.Column('date_verified', sa.Date(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('date_uploaded', sa.Date(), nullable=True),
    sa.Column('artisan_id', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artisan_id'], ['artisan.artisan_id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['document_category.id'], ),
    sa.PrimaryKeyConstraint('doc_id')
    )
    op.create_table('rating',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('artisan_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['artisan_id'], ['artisan.artisan_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_index('d_date_date_actual_idx', table_name='d_date')
    # op.drop_table('d_date')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('d_date',
    # sa.Column('date_dim_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('date_actual', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('epoch', sa.BIGINT(), autoincrement=False, nullable=False),
    # sa.Column('day_suffix', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    # sa.Column('day_name', sa.VARCHAR(length=9), autoincrement=False, nullable=False),
    # sa.Column('day_of_week', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('day_of_month', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('day_of_quarter', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('day_of_year', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('week_of_month', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('week_of_year', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('week_of_year_iso', sa.CHAR(length=10), autoincrement=False, nullable=False),
    # sa.Column('month_actual', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('month_name', sa.VARCHAR(length=9), autoincrement=False, nullable=False),
    # sa.Column('month_name_abbreviated', sa.CHAR(length=3), autoincrement=False, nullable=False),
    # sa.Column('quarter_actual', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('quarter_name', sa.VARCHAR(length=9), autoincrement=False, nullable=False),
    # sa.Column('year_actual', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('first_day_of_week', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('last_day_of_week', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('first_day_of_month', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('last_day_of_month', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('first_day_of_quarter', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('last_day_of_quarter', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('first_day_of_year', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('last_day_of_year', sa.DATE(), autoincrement=False, nullable=False),
    # sa.Column('mmyyyy', sa.CHAR(length=6), autoincrement=False, nullable=False),
    # sa.Column('mmddyyyy', sa.CHAR(length=10), autoincrement=False, nullable=False),
    # sa.Column('weekend_indr', sa.BOOLEAN(), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('date_dim_id', name='d_date_date_dim_id_pk')
    # )
    # op.create_index('d_date_date_actual_idx', 'd_date', ['date_actual'], unique=False)
    op.drop_table('rating')
    op.drop_table('document')
    op.drop_table('booking')
    op.drop_table('payment')
    op.drop_table('artisan')
    op.drop_table('address')
    op.drop_table('user')
    op.drop_table('landmark')
    op.drop_table('socket')
    op.drop_index(op.f('ix_role_default'), table_name='role')
    op.drop_table('role')
    op.drop_table('document_category')
    op.drop_table('city')
    op.drop_index(op.f('ix_bookingcategory_name'), table_name='bookingcategory')
    op.drop_table('bookingcategory')
    op.drop_table('addresstypes')
    # ### end Alembic commands ###
